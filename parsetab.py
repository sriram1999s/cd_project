
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND_ASSIGN ASSIGN BIT_AND BIT_OR BIT_XOR CHAR COMMA DIVIDE DIV_ASSIGN ELSE EQ FLOAT_NUM GE GT HASH HEADER_FILE ID IF INCLUDE INT_NUM LE LT L_FLOWBRACE L_PAREN L_SHIFT L_SHIFT_ASSIGN MINUS MINUS_ASSIGN MINUS_MINUS MOD MOD_ASSIGN MULTIPLY MUL_ASSIGN NE NOT OR OR_ASSIGN PLUS PLUS_ASSIGN PLUS_PLUS R_FLOWBRACE R_PAREN R_SHIFT R_SHIFT_ASSIGN SEMICOLON STRING TYPE WHILE XOR_ASSIGN\n    start : multiple_statements\n    \n    multiple_statements : multiple_statements statement\n                        | statement\n    \n    statement : open\n              | closed\n    \n    open : IF condition statement\n         | IF condition closed ELSE open\n         | WHILE condition open\n    \n    closed : simple\n           | block\n           | IF condition closed ELSE closed\n           | WHILE condition closed\n    \n    condition : L_PAREN expr R_PAREN\n    \n    declaration : TYPE ID SEMICOLON\n                | TYPE ID ASSIGN expr SEMICOLON\n    \n    block : left_flower multiple_statements right_flower\n          | left_flower right_flower\n    \n    left_flower : L_FLOWBRACE\n    \n    right_flower : R_FLOWBRACE\n    \n    simple : expr SEMICOLON\n\t       | header\n           | declaration\n           | function\n           | SEMICOLON\n    \n    function_call : ID L_PAREN call_params R_PAREN\n    \n    \tcall_params : empty\n\t\t            | yes_call_params end_call_params\n\t\t            | end_call_params\n    \n    yes_call_params : yes_call_params expr COMMA\n\t\t            | expr COMMA\n    \n    end_call_params : expr\n    \n    yes_dec_params : yes_dec_params TYPE expr COMMA\n    \t\t       | yes_dec_params TYPE COMMA\n                   | yes_dec_params TYPE MULTIPLY COMMA\n                   | TYPE expr COMMA\n   \t\t           | TYPE COMMA\n        \t       | TYPE MULTIPLY COMMA\n    \n    end_dec_params : TYPE expr\n\t\t           | TYPE\n    \n    dec_params : empty\n\t           | yes_dec_params end_dec_params\n\t           | end_dec_params\n    \n    function : TYPE ID L_PAREN dec_params R_PAREN function_2\n    \n    function_2 : SEMICOLON\n    \t       | block\n    \n    header : HASH INCLUDE STRING\n\t       | HASH INCLUDE HEADER_FILE\n    empty :\n    expr : expr assignment exprOR\n         | exprOR\n    \n    assignment : ASSIGN\n               | PLUS_ASSIGN\n               | MINUS_ASSIGN\n               | MUL_ASSIGN\n               | DIV_ASSIGN\n               | AND_ASSIGN\n               | OR_ASSIGN\n               | XOR_ASSIGN\n               | MOD_ASSIGN\n               | L_SHIFT_ASSIGN\n               | R_SHIFT_ASSIGN\n    \n    exprOR : exprOR OR exprAND\n           | exprAND\n    \n    exprAND : exprAND AND exprBITOR\n            | exprBITOR\n    \n    exprBITOR : exprBITOR BIT_OR exprBITXOR\n              | exprBITXOR\n    \n    exprBITXOR : exprBITXOR BIT_XOR exprBITAND\n               | exprBITAND\n    \n    exprBITAND : exprBITAND BIT_AND exprEQ\n               | exprEQ\n    \n    exprEQ : exprEQ EQ exprRELOP\n           | exprEQ NE exprRELOP\n           | exprRELOP\n    \n    exprRELOP : exprRELOP relop exprSHIFT\n              | exprSHIFT\n    \n    relop : LE\n          | LT\n          | GE\n          | GT\n    \n    exprSHIFT : exprSHIFT L_SHIFT exprOP\n              | exprSHIFT R_SHIFT exprOP\n              | exprOP\n    \n    exprOP : exprOP PLUS term\n           | exprOP MINUS term\n           | term\n    \n    term : term MULTIPLY factor\n         | term DIVIDE factor\n         | term MOD factor\n         | factor\n    \n    factor : NOT factor\n           | PLUS factor\n           | MINUS factor\n           | PLUS_PLUS factor\n           | MINUS_MINUS factor\n\t       | brace\n    \n    brace  : L_PAREN expr R_PAREN\n           | brace PLUS_PLUS\n           | brace MINUS_MINUS\n           | NUM\n           | STRING\n           | ID\n    \t   | CHAR\n           | function_call\n    \n    NUM : INT_NUM\n\t    | FLOAT_NUM\n    '
    
_lr_action_items = {'IF':([0,2,3,4,5,8,9,11,12,13,14,15,22,44,45,47,48,61,62,63,95,96,99,100,102,104,105,106,129,130,131,132,143,144,145,146,154,157,158,159,],[6,6,-3,-4,-5,-9,-10,-24,-21,-22,-23,6,-18,-2,94,6,-20,6,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,94,6,94,-13,-5,-11,-7,-15,94,-43,-44,-45,]),'WHILE':([0,2,3,4,5,8,9,11,12,13,14,15,22,44,45,47,48,61,62,63,95,96,99,100,102,104,105,106,129,130,131,132,143,144,145,146,154,157,158,159,],[7,7,-3,-4,-5,-9,-10,-24,-21,-22,-23,7,-18,-2,97,7,-20,7,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,97,7,97,-13,-5,-11,-7,-15,97,-43,-44,-45,]),'SEMICOLON':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,18,20,22,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,44,45,47,48,61,62,63,66,84,88,89,90,91,92,93,95,96,99,100,101,102,103,104,105,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,139,143,144,145,146,150,154,157,158,159,],[11,11,-3,-4,-5,-9,-10,48,-24,-21,-22,-23,11,-50,-101,-102,-18,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-2,11,11,-20,11,-17,-19,106,-92,-93,-91,-94,-95,-98,-99,-6,-5,-8,-12,-49,-16,-62,-46,-47,-14,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,11,11,11,-13,146,-25,-5,-11,-7,-15,158,11,-43,-44,-45,]),'HASH':([0,2,3,4,5,8,9,11,12,13,14,15,22,44,45,47,48,61,62,63,95,96,99,100,102,104,105,106,129,130,131,132,143,144,145,146,154,157,158,159,],[17,17,-3,-4,-5,-9,-10,-24,-21,-22,-23,17,-18,-2,17,17,-20,17,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,17,17,17,-13,-5,-11,-7,-15,17,-43,-44,-45,]),'TYPE':([0,2,3,4,5,8,9,11,12,13,14,15,22,44,45,47,48,61,62,63,95,96,99,100,102,104,105,106,108,129,130,131,132,137,143,144,145,146,148,154,155,156,157,158,159,161,163,164,],[19,19,-3,-4,-5,-9,-10,-24,-21,-22,-23,19,-18,-2,19,19,-20,19,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,134,19,19,19,-13,152,-5,-11,-7,-15,-36,19,-35,-37,-43,-44,-45,-33,-32,-34,]),'L_FLOWBRACE':([0,2,3,4,5,8,9,11,12,13,14,15,22,44,45,47,48,61,62,63,95,96,99,100,102,104,105,106,129,130,131,132,143,144,145,146,150,154,157,158,159,],[22,22,-3,-4,-5,-9,-10,-24,-21,-22,-23,22,-18,-2,22,22,-20,22,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,22,22,22,-13,-5,-11,-7,-15,22,22,-43,-44,-45,]),'NOT':([0,2,3,4,5,8,9,11,12,13,14,15,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[35,35,-3,-4,-5,-9,-10,-24,-21,-22,-23,35,35,-18,35,35,35,35,35,-2,35,35,35,-20,35,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,35,-17,-19,35,35,35,35,35,35,35,35,35,-77,-78,-79,-80,35,35,35,35,35,35,35,-6,-5,-8,-12,-16,-46,-47,-14,35,35,35,35,35,-13,35,-30,-5,-11,-7,-15,35,-29,35,-43,-44,-45,]),'PLUS':([0,2,3,4,5,8,9,11,12,13,14,15,18,20,21,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,99,100,102,104,105,106,107,111,114,122,123,124,125,126,127,128,129,130,131,132,134,139,142,143,144,145,146,152,153,154,157,158,159,],[31,31,-3,-4,-5,-9,-10,-24,-21,-22,-23,31,-101,-102,31,-18,82,31,-86,31,-90,31,31,31,-96,-100,-103,-104,-105,-106,-2,31,31,31,-20,31,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,31,-17,-19,31,31,31,31,31,31,31,31,31,-77,-78,-79,-80,31,31,31,31,-92,31,31,31,-93,-91,-94,-95,-98,-99,-6,-5,-8,-12,-16,-46,-47,-14,31,31,-97,82,82,-84,-85,-87,-88,-89,31,31,31,-13,31,-25,-30,-5,-11,-7,-15,31,-29,31,-43,-44,-45,]),'MINUS':([0,2,3,4,5,8,9,11,12,13,14,15,18,20,21,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,99,100,102,104,105,106,107,111,114,122,123,124,125,126,127,128,129,130,131,132,134,139,142,143,144,145,146,152,153,154,157,158,159,],[33,33,-3,-4,-5,-9,-10,-24,-21,-22,-23,33,-101,-102,33,-18,83,33,-86,33,-90,33,33,33,-96,-100,-103,-104,-105,-106,-2,33,33,33,-20,33,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,33,-17,-19,33,33,33,33,33,33,33,33,33,-77,-78,-79,-80,33,33,33,33,-92,33,33,33,-93,-91,-94,-95,-98,-99,-6,-5,-8,-12,-16,-46,-47,-14,33,33,-97,83,83,-84,-85,-87,-88,-89,33,33,33,-13,33,-25,-30,-5,-11,-7,-15,33,-29,33,-43,-44,-45,]),'PLUS_PLUS':([0,2,3,4,5,8,9,11,12,13,14,15,18,20,21,22,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,92,93,95,96,99,100,102,104,105,106,107,111,114,129,130,131,132,134,139,142,143,144,145,146,152,153,154,157,158,159,],[36,36,-3,-4,-5,-9,-10,-24,-21,-22,-23,36,-101,-102,36,-18,36,36,36,36,36,92,-100,-103,-104,-105,-106,-2,36,36,36,-20,36,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,36,-17,-19,36,36,36,36,36,36,36,36,36,-77,-78,-79,-80,36,36,36,36,36,36,36,-98,-99,-6,-5,-8,-12,-16,-46,-47,-14,36,36,-97,36,36,36,-13,36,-25,-30,-5,-11,-7,-15,36,-29,36,-43,-44,-45,]),'MINUS_MINUS':([0,2,3,4,5,8,9,11,12,13,14,15,18,20,21,22,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,92,93,95,96,99,100,102,104,105,106,107,111,114,129,130,131,132,134,139,142,143,144,145,146,152,153,154,157,158,159,],[37,37,-3,-4,-5,-9,-10,-24,-21,-22,-23,37,-101,-102,37,-18,37,37,37,37,37,93,-100,-103,-104,-105,-106,-2,37,37,37,-20,37,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,37,-17,-19,37,37,37,37,37,37,37,37,37,-77,-78,-79,-80,37,37,37,37,37,37,37,-98,-99,-6,-5,-8,-12,-16,-46,-47,-14,37,37,-97,37,37,37,-13,37,-25,-30,-5,-11,-7,-15,37,-29,37,-43,-44,-45,]),'L_PAREN':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,94,95,96,97,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[21,21,-3,-4,-5,46,46,-9,-10,-24,-21,-22,-23,21,67,21,-18,21,21,21,21,21,-2,21,21,21,-20,21,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,21,-17,-19,21,108,21,21,21,21,21,21,21,21,-77,-78,-79,-80,21,21,21,21,21,21,21,46,-6,-5,46,-8,-12,-16,-46,-47,-14,21,21,21,21,21,-13,21,-30,-5,-11,-7,-15,21,-29,21,-43,-44,-45,]),'STRING':([0,2,3,4,5,8,9,11,12,13,14,15,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[18,18,-3,-4,-5,-9,-10,-24,-21,-22,-23,18,18,-18,18,18,18,18,18,-2,18,18,18,-20,18,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,18,-17,-19,18,104,18,18,18,18,18,18,18,18,-77,-78,-79,-80,18,18,18,18,18,18,18,-6,-5,-8,-12,-16,-46,-47,-14,18,18,18,18,18,-13,18,-30,-5,-11,-7,-15,18,-29,18,-43,-44,-45,]),'ID':([0,2,3,4,5,8,9,11,12,13,14,15,19,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[20,20,-3,-4,-5,-9,-10,-24,-21,-22,-23,20,66,20,-18,20,20,20,20,20,-2,20,20,20,-20,20,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,20,-17,-19,20,20,20,20,20,20,20,20,20,-77,-78,-79,-80,20,20,20,20,20,20,20,-6,-5,-8,-12,-16,-46,-47,-14,20,20,20,20,20,-13,20,-30,-5,-11,-7,-15,20,-29,20,-43,-44,-45,]),'CHAR':([0,2,3,4,5,8,9,11,12,13,14,15,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[40,40,-3,-4,-5,-9,-10,-24,-21,-22,-23,40,40,-18,40,40,40,40,40,-2,40,40,40,-20,40,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,40,-17,-19,40,40,40,40,40,40,40,40,40,-77,-78,-79,-80,40,40,40,40,40,40,40,-6,-5,-8,-12,-16,-46,-47,-14,40,40,40,40,40,-13,40,-30,-5,-11,-7,-15,40,-29,40,-43,-44,-45,]),'INT_NUM':([0,2,3,4,5,8,9,11,12,13,14,15,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[42,42,-3,-4,-5,-9,-10,-24,-21,-22,-23,42,42,-18,42,42,42,42,42,-2,42,42,42,-20,42,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,42,-17,-19,42,42,42,42,42,42,42,42,42,-77,-78,-79,-80,42,42,42,42,42,42,42,-6,-5,-8,-12,-16,-46,-47,-14,42,42,42,42,42,-13,42,-30,-5,-11,-7,-15,42,-29,42,-43,-44,-45,]),'FLOAT_NUM':([0,2,3,4,5,8,9,11,12,13,14,15,21,22,31,33,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,95,96,99,100,102,104,105,106,107,111,129,130,131,132,134,142,143,144,145,146,152,153,154,157,158,159,],[43,43,-3,-4,-5,-9,-10,-24,-21,-22,-23,43,43,-18,43,43,43,43,43,-2,43,43,43,-20,43,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,43,-17,-19,43,43,43,43,43,43,43,43,43,-77,-78,-79,-80,43,43,43,43,43,43,43,-6,-5,-8,-12,-16,-46,-47,-14,43,43,43,43,43,-13,43,-30,-5,-11,-7,-15,43,-29,43,-43,-44,-45,]),'$end':([1,2,3,4,5,8,9,11,12,13,14,44,48,62,63,95,96,99,100,102,104,105,106,143,144,145,146,157,158,159,],[0,-1,-3,-4,-5,-9,-10,-24,-21,-22,-23,-2,-20,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,-5,-11,-7,-15,-43,-44,-45,]),'R_FLOWBRACE':([3,4,5,8,9,11,12,13,14,15,22,44,48,61,62,63,95,96,99,100,102,104,105,106,143,144,145,146,157,158,159,],[-3,-4,-5,-9,-10,-24,-21,-22,-23,63,-18,-2,-20,63,-17,-19,-6,-5,-8,-12,-16,-46,-47,-14,-5,-11,-7,-15,-43,-44,-45,]),'ELSE':([8,9,11,12,13,14,48,62,63,96,100,102,104,105,106,143,144,146,157,158,159,],[-9,-10,-24,-21,-22,-23,-20,-17,-19,130,-12,-16,-46,-47,-14,154,-11,-15,-43,-44,-45,]),'ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,66,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[50,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,107,50,-92,-93,-91,-94,-95,-98,-99,50,-49,-62,50,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,50,-25,50,50,50,]),'PLUS_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[51,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,51,-92,-93,-91,-94,-95,-98,-99,51,-49,-62,51,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,51,-25,51,51,51,]),'MINUS_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[52,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,52,-92,-93,-91,-94,-95,-98,-99,52,-49,-62,52,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,52,-25,52,52,52,]),'MUL_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[53,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,53,-92,-93,-91,-94,-95,-98,-99,53,-49,-62,53,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,53,-25,53,53,53,]),'DIV_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[54,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,54,-92,-93,-91,-94,-95,-98,-99,54,-49,-62,54,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,54,-25,54,54,54,]),'AND_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[55,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,55,-92,-93,-91,-94,-95,-98,-99,55,-49,-62,55,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,55,-25,55,55,55,]),'OR_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[56,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,56,-92,-93,-91,-94,-95,-98,-99,56,-49,-62,56,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,56,-25,56,56,56,]),'XOR_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[57,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,57,-92,-93,-91,-94,-95,-98,-99,57,-49,-62,57,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,57,-25,57,57,57,]),'MOD_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[58,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,58,-92,-93,-91,-94,-95,-98,-99,58,-49,-62,58,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,58,-25,58,58,58,]),'L_SHIFT_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[59,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,59,-92,-93,-91,-94,-95,-98,-99,59,-49,-62,59,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,59,-25,59,59,59,]),'R_SHIFT_ASSIGN':([10,16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,68,84,88,89,90,91,92,93,98,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,139,141,147,160,],[60,-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,60,-92,-93,-91,-94,-95,-98,-99,60,-49,-62,60,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,60,-25,60,60,60,]),'R_PAREN':([16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,67,68,84,88,89,90,91,92,93,98,101,103,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,138,139,140,141,147,151,152,160,],[-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-48,114,-92,-93,-91,-94,-95,-98,-99,132,-49,-62,-48,139,-26,-28,-31,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-39,150,-40,-42,-25,-27,-31,-38,-41,-39,-38,]),'COMMA':([16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,101,103,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,139,141,147,149,152,160,162,],[-50,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-49,-62,142,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,148,-25,153,155,156,161,163,164,]),'OR':([16,18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,101,103,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,139,],[64,-101,-102,-63,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,64,-62,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'INCLUDE':([17,],[65,]),'MULTIPLY':([18,20,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,124,125,126,127,128,134,139,152,],[-101,-102,85,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,85,85,-87,-88,-89,149,-25,162,]),'DIVIDE':([18,20,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,124,125,126,127,128,139,],[-101,-102,86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,86,86,-87,-88,-89,-25,]),'MOD':([18,20,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,124,125,126,127,128,139,],[-101,-102,87,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,87,87,-87,-88,-89,-25,]),'L_SHIFT':([18,20,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,121,122,123,124,125,126,127,128,139,],[-101,-102,80,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,80,-81,-82,-84,-85,-87,-88,-89,-25,]),'R_SHIFT':([18,20,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,121,122,123,124,125,126,127,128,139,],[-101,-102,81,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,81,-81,-82,-84,-85,-87,-88,-89,-25,]),'LE':([18,20,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,76,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,76,76,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'LT':([18,20,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,77,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,77,77,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'GE':([18,20,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,78,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,78,78,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'GT':([18,20,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,79,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,79,79,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'EQ':([18,20,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,73,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,73,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'NE':([18,20,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,74,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,74,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'BIT_AND':([18,20,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,117,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,72,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,72,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'BIT_XOR':([18,20,25,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,116,117,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,71,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,71,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'BIT_OR':([18,20,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,70,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,-97,70,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'AND':([18,20,23,24,25,26,27,28,29,30,32,34,38,39,40,41,42,43,84,88,89,90,91,92,93,103,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,139,],[-101,-102,69,-65,-67,-69,-71,-74,-76,-83,-86,-90,-96,-100,-103,-104,-105,-106,-92,-93,-91,-94,-95,-98,-99,69,-97,-64,-66,-68,-70,-72,-73,-75,-81,-82,-84,-85,-87,-88,-89,-25,]),'HEADER_FILE':([65,],[105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'multiple_statements':([0,15,],[2,61,]),'statement':([0,2,15,45,61,129,],[3,44,3,95,44,95,]),'open':([0,2,15,45,47,61,129,130,131,154,],[4,4,4,4,99,4,4,145,99,145,]),'closed':([0,2,15,45,47,61,129,130,131,154,],[5,5,5,96,100,5,143,144,100,144,]),'simple':([0,2,15,45,47,61,129,130,131,154,],[8,8,8,8,8,8,8,8,8,8,]),'block':([0,2,15,45,47,61,129,130,131,150,154,],[9,9,9,9,9,9,9,9,9,159,9,]),'expr':([0,2,15,21,45,46,47,61,67,107,111,129,130,131,134,152,154,],[10,10,10,68,10,98,10,10,113,133,141,10,10,10,147,160,10,]),'header':([0,2,15,45,47,61,129,130,131,154,],[12,12,12,12,12,12,12,12,12,12,]),'declaration':([0,2,15,45,47,61,129,130,131,154,],[13,13,13,13,13,13,13,13,13,13,]),'function':([0,2,15,45,47,61,129,130,131,154,],[14,14,14,14,14,14,14,14,14,14,]),'left_flower':([0,2,15,45,47,61,129,130,131,150,154,],[15,15,15,15,15,15,15,15,15,15,15,]),'exprOR':([0,2,15,21,45,46,47,49,61,67,107,111,129,130,131,134,152,154,],[16,16,16,16,16,16,16,101,16,16,16,16,16,16,16,16,16,16,]),'exprAND':([0,2,15,21,45,46,47,49,61,64,67,107,111,129,130,131,134,152,154,],[23,23,23,23,23,23,23,23,23,103,23,23,23,23,23,23,23,23,23,]),'exprBITOR':([0,2,15,21,45,46,47,49,61,64,67,69,107,111,129,130,131,134,152,154,],[24,24,24,24,24,24,24,24,24,24,24,115,24,24,24,24,24,24,24,24,]),'exprBITXOR':([0,2,15,21,45,46,47,49,61,64,67,69,70,107,111,129,130,131,134,152,154,],[25,25,25,25,25,25,25,25,25,25,25,25,116,25,25,25,25,25,25,25,25,]),'exprBITAND':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,107,111,129,130,131,134,152,154,],[26,26,26,26,26,26,26,26,26,26,26,26,26,117,26,26,26,26,26,26,26,26,]),'exprEQ':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,72,107,111,129,130,131,134,152,154,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,118,27,27,27,27,27,27,27,27,]),'exprRELOP':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,72,73,74,107,111,129,130,131,134,152,154,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,119,120,28,28,28,28,28,28,28,28,]),'exprSHIFT':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,72,73,74,75,107,111,129,130,131,134,152,154,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,121,29,29,29,29,29,29,29,29,]),'exprOP':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,107,111,129,130,131,134,152,154,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,122,123,30,30,30,30,30,30,30,30,]),'term':([0,2,15,21,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,82,83,107,111,129,130,131,134,152,154,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,125,32,32,32,32,32,32,32,32,]),'factor':([0,2,15,21,31,33,35,36,37,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,82,83,85,86,87,107,111,129,130,131,134,152,154,],[34,34,34,34,84,88,89,90,91,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,126,127,128,34,34,34,34,34,34,34,34,]),'brace':([0,2,15,21,31,33,35,36,37,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,82,83,85,86,87,107,111,129,130,131,134,152,154,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'NUM':([0,2,15,21,31,33,35,36,37,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,82,83,85,86,87,107,111,129,130,131,134,152,154,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'function_call':([0,2,15,21,31,33,35,36,37,45,46,47,49,61,64,67,69,70,71,72,73,74,75,80,81,82,83,85,86,87,107,111,129,130,131,134,152,154,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condition':([6,7,94,97,],[45,47,129,131,]),'assignment':([10,68,98,113,133,141,147,160,],[49,49,49,49,49,49,49,49,]),'right_flower':([15,61,],[62,102,]),'relop':([28,119,120,],[75,75,75,]),'call_params':([67,],[109,]),'empty':([67,108,],[110,136,]),'yes_call_params':([67,],[111,]),'end_call_params':([67,111,],[112,140,]),'dec_params':([108,],[135,]),'yes_dec_params':([108,],[137,]),'end_dec_params':([108,137,],[138,151,]),'function_2':([150,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> multiple_statements','start',1,'p_start','parser.py',17),
  ('multiple_statements -> multiple_statements statement','multiple_statements',2,'p_multiple_statements','parser.py',30),
  ('multiple_statements -> statement','multiple_statements',1,'p_multiple_statements','parser.py',31),
  ('statement -> open','statement',1,'p_statement','parser.py',40),
  ('statement -> closed','statement',1,'p_statement','parser.py',41),
  ('open -> IF condition statement','open',3,'p_open','parser.py',49),
  ('open -> IF condition closed ELSE open','open',5,'p_open','parser.py',50),
  ('open -> WHILE condition open','open',3,'p_open','parser.py',51),
  ('closed -> simple','closed',1,'p_closed','parser.py',62),
  ('closed -> block','closed',1,'p_closed','parser.py',63),
  ('closed -> IF condition closed ELSE closed','closed',5,'p_closed','parser.py',64),
  ('closed -> WHILE condition closed','closed',3,'p_closed','parser.py',65),
  ('condition -> L_PAREN expr R_PAREN','condition',3,'p_condition','parser.py',78),
  ('declaration -> TYPE ID SEMICOLON','declaration',3,'p_declaration','parser.py',84),
  ('declaration -> TYPE ID ASSIGN expr SEMICOLON','declaration',5,'p_declaration','parser.py',85),
  ('block -> left_flower multiple_statements right_flower','block',3,'p_block','parser.py',97),
  ('block -> left_flower right_flower','block',2,'p_block','parser.py',98),
  ('left_flower -> L_FLOWBRACE','left_flower',1,'p_left_flower','parser.py',105),
  ('right_flower -> R_FLOWBRACE','right_flower',1,'p_right_flower','parser.py',111),
  ('simple -> expr SEMICOLON','simple',2,'p_simple','parser.py',117),
  ('simple -> header','simple',1,'p_simple','parser.py',118),
  ('simple -> declaration','simple',1,'p_simple','parser.py',119),
  ('simple -> function','simple',1,'p_simple','parser.py',120),
  ('simple -> SEMICOLON','simple',1,'p_simple','parser.py',121),
  ('function_call -> ID L_PAREN call_params R_PAREN','function_call',4,'p_function_call','parser.py',128),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',134),
  ('call_params -> yes_call_params end_call_params','call_params',2,'p_call_params','parser.py',135),
  ('call_params -> end_call_params','call_params',1,'p_call_params','parser.py',136),
  ('yes_call_params -> yes_call_params expr COMMA','yes_call_params',3,'p_yes_call_params','parser.py',145),
  ('yes_call_params -> expr COMMA','yes_call_params',2,'p_yes_call_params','parser.py',146),
  ('end_call_params -> expr','end_call_params',1,'p_end_call_params','parser.py',155),
  ('yes_dec_params -> yes_dec_params TYPE expr COMMA','yes_dec_params',4,'p_yes_dec_params','parser.py',163),
  ('yes_dec_params -> yes_dec_params TYPE COMMA','yes_dec_params',3,'p_yes_dec_params','parser.py',164),
  ('yes_dec_params -> yes_dec_params TYPE MULTIPLY COMMA','yes_dec_params',4,'p_yes_dec_params','parser.py',165),
  ('yes_dec_params -> TYPE expr COMMA','yes_dec_params',3,'p_yes_dec_params','parser.py',166),
  ('yes_dec_params -> TYPE COMMA','yes_dec_params',2,'p_yes_dec_params','parser.py',167),
  ('yes_dec_params -> TYPE MULTIPLY COMMA','yes_dec_params',3,'p_yes_dec_params','parser.py',168),
  ('end_dec_params -> TYPE expr','end_dec_params',2,'p_end_dec_params','parser.py',189),
  ('end_dec_params -> TYPE','end_dec_params',1,'p_end_dec_params','parser.py',190),
  ('dec_params -> empty','dec_params',1,'p_dec_params','parser.py',199),
  ('dec_params -> yes_dec_params end_dec_params','dec_params',2,'p_dec_params','parser.py',200),
  ('dec_params -> end_dec_params','dec_params',1,'p_dec_params','parser.py',201),
  ('function -> TYPE ID L_PAREN dec_params R_PAREN function_2','function',6,'p_function','parser.py',212),
  ('function_2 -> SEMICOLON','function_2',1,'p_function_2','parser.py',221),
  ('function_2 -> block','function_2',1,'p_function_2','parser.py',222),
  ('header -> HASH INCLUDE STRING','header',3,'p_header','parser.py',229),
  ('header -> HASH INCLUDE HEADER_FILE','header',3,'p_header','parser.py',230),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',236),
  ('expr -> expr assignment exprOR','expr',3,'p_expr','parser.py',241),
  ('expr -> exprOR','expr',1,'p_expr','parser.py',242),
  ('assignment -> ASSIGN','assignment',1,'p_assignment','parser.py',253),
  ('assignment -> PLUS_ASSIGN','assignment',1,'p_assignment','parser.py',254),
  ('assignment -> MINUS_ASSIGN','assignment',1,'p_assignment','parser.py',255),
  ('assignment -> MUL_ASSIGN','assignment',1,'p_assignment','parser.py',256),
  ('assignment -> DIV_ASSIGN','assignment',1,'p_assignment','parser.py',257),
  ('assignment -> AND_ASSIGN','assignment',1,'p_assignment','parser.py',258),
  ('assignment -> OR_ASSIGN','assignment',1,'p_assignment','parser.py',259),
  ('assignment -> XOR_ASSIGN','assignment',1,'p_assignment','parser.py',260),
  ('assignment -> MOD_ASSIGN','assignment',1,'p_assignment','parser.py',261),
  ('assignment -> L_SHIFT_ASSIGN','assignment',1,'p_assignment','parser.py',262),
  ('assignment -> R_SHIFT_ASSIGN','assignment',1,'p_assignment','parser.py',263),
  ('exprOR -> exprOR OR exprAND','exprOR',3,'p_exprOR','parser.py',269),
  ('exprOR -> exprAND','exprOR',1,'p_exprOR','parser.py',270),
  ('exprAND -> exprAND AND exprBITOR','exprAND',3,'p_exprAND','parser.py',279),
  ('exprAND -> exprBITOR','exprAND',1,'p_exprAND','parser.py',280),
  ('exprBITOR -> exprBITOR BIT_OR exprBITXOR','exprBITOR',3,'p_exprBITOR','parser.py',289),
  ('exprBITOR -> exprBITXOR','exprBITOR',1,'p_exprBITOR','parser.py',290),
  ('exprBITXOR -> exprBITXOR BIT_XOR exprBITAND','exprBITXOR',3,'p_exprBITXOR','parser.py',299),
  ('exprBITXOR -> exprBITAND','exprBITXOR',1,'p_exprBITXOR','parser.py',300),
  ('exprBITAND -> exprBITAND BIT_AND exprEQ','exprBITAND',3,'p_exprBITAND','parser.py',309),
  ('exprBITAND -> exprEQ','exprBITAND',1,'p_exprBITAND','parser.py',310),
  ('exprEQ -> exprEQ EQ exprRELOP','exprEQ',3,'p_exprEQ','parser.py',319),
  ('exprEQ -> exprEQ NE exprRELOP','exprEQ',3,'p_exprEQ','parser.py',320),
  ('exprEQ -> exprRELOP','exprEQ',1,'p_exprEQ','parser.py',321),
  ('exprRELOP -> exprRELOP relop exprSHIFT','exprRELOP',3,'p_exprRELOP','parser.py',330),
  ('exprRELOP -> exprSHIFT','exprRELOP',1,'p_exprRELOP','parser.py',331),
  ('relop -> LE','relop',1,'p_relop','parser.py',340),
  ('relop -> LT','relop',1,'p_relop','parser.py',341),
  ('relop -> GE','relop',1,'p_relop','parser.py',342),
  ('relop -> GT','relop',1,'p_relop','parser.py',343),
  ('exprSHIFT -> exprSHIFT L_SHIFT exprOP','exprSHIFT',3,'p_exprSHIFT','parser.py',349),
  ('exprSHIFT -> exprSHIFT R_SHIFT exprOP','exprSHIFT',3,'p_exprSHIFT','parser.py',350),
  ('exprSHIFT -> exprOP','exprSHIFT',1,'p_exprSHIFT','parser.py',351),
  ('exprOP -> exprOP PLUS term','exprOP',3,'p_exprOP','parser.py',360),
  ('exprOP -> exprOP MINUS term','exprOP',3,'p_exprOP','parser.py',361),
  ('exprOP -> term','exprOP',1,'p_exprOP','parser.py',362),
  ('term -> term MULTIPLY factor','term',3,'p_term','parser.py',371),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',372),
  ('term -> term MOD factor','term',3,'p_term','parser.py',373),
  ('term -> factor','term',1,'p_term','parser.py',374),
  ('factor -> NOT factor','factor',2,'p_factor','parser.py',385),
  ('factor -> PLUS factor','factor',2,'p_factor','parser.py',386),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',387),
  ('factor -> PLUS_PLUS factor','factor',2,'p_factor','parser.py',388),
  ('factor -> MINUS_MINUS factor','factor',2,'p_factor','parser.py',389),
  ('factor -> brace','factor',1,'p_factor','parser.py',390),
  ('brace -> L_PAREN expr R_PAREN','brace',3,'p_brace','parser.py',406),
  ('brace -> brace PLUS_PLUS','brace',2,'p_brace','parser.py',407),
  ('brace -> brace MINUS_MINUS','brace',2,'p_brace','parser.py',408),
  ('brace -> NUM','brace',1,'p_brace','parser.py',409),
  ('brace -> STRING','brace',1,'p_brace','parser.py',410),
  ('brace -> ID','brace',1,'p_brace','parser.py',411),
  ('brace -> CHAR','brace',1,'p_brace','parser.py',412),
  ('brace -> function_call','brace',1,'p_brace','parser.py',413),
  ('NUM -> INT_NUM','NUM',1,'p_NUM','parser.py',427),
  ('NUM -> FLOAT_NUM','NUM',1,'p_NUM','parser.py',428),
]
